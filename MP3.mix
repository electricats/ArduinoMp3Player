<xml version=\"1.0.8\" board=\"Arduino Nano[atmega328]\" xmlns=\"http://www.w3.org/1999/xhtml\"><block type=\"base_setup\" id=\"b|_xD#3:?aX8i!4R]@:+\" x=\"79\" y=\"121\"><statement name=\"DO\"><block type=\"factory_declare2\" id=\".+cKz^_T7hwwWs6@*G7;\" collapsed=\"true\"><field name=\"VALUE\">#include \"SerialMP3Player.h\"\n\n#define TX 11\n#define RX 10\n\nSerialMP3Player mp3(RX,TX);\n\n char c;  // char from Serial\n char cmd=' ';\n char cmd1=' ';\n</field><next><block type=\"factory_declare2\" id=\"f=%wg7f$H/9kJ1@4Lu:`\" collapsed=\"true\"><field name=\"VALUE\">\nvoid menu(char op, int nval){\n  // Menu\n  switch (op){\n    case '?':\n    case 'h':\n        Serial.println(\"SerialMP3Player Basic Commands:\");\n        Serial.println(\" ? - Display Menu options. \");\n        Serial.println(\" P01 - Play 01 file\");\n        Serial.println(\" F01 - Play 01 folder\");\n        Serial.println(\" S01 - Play 01 file in loop\");\n        Serial.println(\" V01 - Play 01 file, volume 30\");\n        Serial.println(\" p - Play\");\n        Serial.println(\" a - pause\");\n        Serial.println(\" s - stop \");\n        Serial.println(\" &gt; - Next\");\n        Serial.println(\" &lt; - Previous\");\n        Serial.println(\" + - Volume UP\");\n        Serial.println(\" - - Volume DOWN\");\n        Serial.println(\" v15 - Set Volume to 15\");\n        Serial.println(\" c - Query current file\");\n        Serial.println(\" q - Query status\");\n        Serial.println(\" x - Query folder count\");\n        Serial.println(\" t - Query total file count\");\n        Serial.println(\" r - Reset\");\n        Serial.println(\" e - Sleep\");\n        Serial.println(\" w - Wake up\");\n        break;\n\n    case 'P':\n        Serial.println(\"Play\");\n        mp3.play(nval);\n        break;\n\n    case 'F':\n        Serial.println(\"Play Folder\");\n        mp3.playF(nval);\n        break;\n\n    case 'S':\n        Serial.println(\"Play loop\");\n        mp3.playSL(nval);\n        break;\n\n    case 'V':\n        Serial.println(\"Play file at 30 volume\");\n        mp3.play(nval,30);\n        break;\n\n\n    case 'p':\n        Serial.println(\"Play\");\n        mp3.play();\n        break;\n\n    case 'a':\n        Serial.println(\"Pause\");\n        mp3.pause();\n        break;\n\n    case 's':\n        Serial.println(\"Stop\");\n        mp3.stop();\n        break;\n\n    case '&gt;':\n        Serial.println(\"Next\");\n        mp3.playNext();\n        break;\n\n    case '&lt;':\n        Serial.println(\"Previous\");\n        mp3.playPrevious();\n        break;\n\n    case '+':\n        Serial.println(\"Volume UP\");\n        mp3.volUp();\n        break;\n\n    case '-':\n        Serial.println(\"Volume Down\");\n        mp3.volDown();\n        break;\n\n    case 'v':\n        Serial.println(\"Set to Volume\");\n          mp3.setVol(nval);\n          mp3.qVol();\n        break;\n\n    case 'c':\n        Serial.println(\"Query current file\");\n        mp3.qPlaying();\n        break;\n\n    case 'q':\n        Serial.println(\"Query status\");\n        mp3.qStatus();\n        break;\n\n    case 'x':\n        Serial.println(\"Query folder count\");\n        mp3.qTFolders();\n        break;\n\n    case 't':\n        Serial.println(\"Query total file count\");\n        mp3.qTTracks();\n        break;\n\n    case 'r':\n        Serial.println(\"Reset\");\n        mp3.reset();\n        break;\n\n    case 'e':\n        Serial.println(\"Sleep\");\n        mp3.sleep();\n        break;\n\n    case 'w':\n        Serial.println(\"Wake up\");\n        mp3.wakeup();\n        break;\n  }\n}\n\nvoid decode_c(){\n  // Decode c looking for a specific command or a digit\n\n  // if c is a 'v', 'P', 'F', 'S' or 'V' wait for the number XX\n  if (c=='v' || c=='P' || c=='F' || c=='S' || c=='V'){\n    cmd=c;\n  }else{\n    // maybe c is part of XX number\n    if(c&gt;='0' &amp;&amp; c&lt;='9'){\n      // if c is a digit\n      if(cmd1==' '){\n        // if cmd1 is empty then c is the first digit\n        cmd1 = c;\n      }else{\n        // if cmd1 is not empty c is the second digit\n        menu(cmd, ((cmd1-'0')*10)+(c-'0'));\n        cmd = ' ';\n        cmd1 = ' ';\n      }\n    }else{\n      // c is not a digit nor 'v', 'P', 'F' or 'S' so just call menu(c, nval);\n      menu(c, 0);\n    }\n  }\n}</field><next><block type=\"factory_block_with_textarea\" id=\"/%v4M@^Y.X,UFL/@[Z$_\" collapsed=\"true\"><field name=\"VALUE\">  mp3.showDebug(1);       // print what we are sending to the mp3 board.\n\n  Serial.begin(9600);     // start serial interface\n  mp3.begin(9600);        // start mp3-communication\n  delay(500);             // wait for init\n  mp3.setVol(15);\n  mp3.sendCommand(CMD_SEL_DEV, 0, 2);   //select sd-card\n  delay(500);             // wait for init\n\n  </field></block></next></block></next></block></statement></block><block type=\"procedures_defnoreturn\" id=\"|cgmAVT9LBe}iI^o#dE}\" x=\"599\" y=\"98\"><field name=\"NAME\">Play</field><statement name=\"STACK\"><block type=\"factory_block_with_textarea\" id=\"CkUQC0I*ui#EJB8SpQa1\"><field name=\"VALUE\">        mp3.play();</field></block></statement></block><block type=\"procedures_defnoreturn\" id=\"cC{{FgRo{#9!2%znuJFS\" x=\"818\" y=\"99\"><field name=\"NAME\">Pause</field><statement name=\"STACK\"><block type=\"factory_block_with_textarea\" id=\"//DqwM@ocB|(xlZr!!ab\"><field name=\"VALUE\">mp3.pause();</field></block></statement></block><block type=\"procedures_defnoreturn\" id=\"xE$t7g)V7qbEG~g$z^x7\" x=\"1010\" y=\"101\"><field name=\"NAME\">Stop</field><statement name=\"STACK\"><block type=\"factory_block_with_textarea\" id=\"6Clzc2z),a~/9^$/ZE+3\"><field name=\"VALUE\">        mp3.stop();</field></block></statement></block><block type=\"procedures_defnoreturn\" id=\"^Jb{5SR$+t1*{9,G8l#*\" x=\"613\" y=\"262\"><field name=\"NAME\">Next</field><statement name=\"STACK\"><block type=\"factory_block_with_textarea\" id=\"jNq;j;b1HvjqzqFlZry8\"><field name=\"VALUE\">        mp3.playNext();</field></block></statement></block><block type=\"procedures_defnoreturn\" id=\"8!ooR6.WM}8wM5oC|OCK\" x=\"900\" y=\"260\"><field name=\"NAME\">Volume+</field><statement name=\"STACK\"><block type=\"factory_block_with_textarea\" id=\"XS=Yt:2NqS2J7%jAIGF[\"><field name=\"VALUE\">mp3.volUp();</field></block></statement></block><block type=\"controls_delay\" id=\"HUU3!GSu8d*lq^_bF%yL\" x=\"213\" y=\"377\"><field name=\"UNIT\">delay</field><value name=\"DELAY_TIME\"><shadow type=\"math_number\" id=\"nrWJ9}9)qqQQc0/5|gdp\"><field name=\"NUM\">4000</field></shadow></value><next><block type=\"procedures_callnoreturn\" id=\"RyI.-i3NoS]G9`m$Ko?D\"><mutation name=\"Play\"></mutation></block></next></block><block type=\"procedures_defnoreturn\" id=\";MIH|M21Kg@Pt;)+Xix`\" x=\"616\" y=\"356\"><field name=\"NAME\">Previous</field><statement name=\"STACK\"><block type=\"factory_block_with_textarea\" id=\"HC_Y}D~e/,GMeyR5-`(r\"><field name=\"VALUE\">mp3.playPrevious();</field></block></statement></block><block type=\"procedures_defnoreturn\" id=\"ce^F_=cF0SF_ctjp;~mr\" x=\"900\" y=\"353\"><field name=\"NAME\">Volume-</field><statement name=\"STACK\"><block type=\"factory_block_with_textarea\" id=\"^Gn8Ocmi++MG}i)0t=7|\"><field name=\"VALUE\">mp3.volDown();</field></block></statement></block><block type=\"factory_block_with_textarea\" id=\"!Si_/[3]^}9T`QD`YHTy\" collapsed=\"true\" disabled=\"true\" x=\"967\" y=\"606\"><field name=\"VALUE\">\n  if (Serial.available()){\n    c = Serial.read();\n    decode_c(); // Decode c.\n  }\n  // Check for the answer.\n  if (mp3.available()){\n    Serial.println(mp3.decodeMP3Answer()); // print decoded answers from mp3\n  }</field></block></xml>